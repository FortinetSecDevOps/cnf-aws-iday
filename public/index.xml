<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Secure AWS workloads with FortiGate CNF SaaS on English</title>
    <link>https://fortinetsecdevops.github.io/cnf-aws-iday/</link>
    <description>Recent content in Secure AWS workloads with FortiGate CNF SaaS on English</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://fortinetsecdevops.github.io/cnf-aws-iday/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Distributed Ingress</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/41_distributedingress.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/41_distributedingress.html</guid>
      <description>Distributed Ingress For this traffic flow we will focus on the Application VPC. Distributed ingress is commonly used when there is a need to inspect traffic for a VPC that is directly accessible with an attached IGW and resources with a public Elastic IP (EIP) or behind a public load balancer (ie ALB, NLB, etc). The benefit of this design is that traffic does not need to traverse additional AWS networking components for inspection so each VPC is isolated from others.</description>
    </item>
    
    <item>
      <title>Task 1: Subscribe to FortiGate CNF in AWS Marketplace</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/31_task1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/31_task1.html</guid>
      <description>Task 1: Subscribe to FortiGate CNF in AWS Marketplace    Log into your AWS account and navigate to the AWS Marketplace listing for FortiGate CNF. In the upper right corner, click View purchase options. On the next page, click Subscribe.      In the available offers list, select the Public offer.      The page should update and show the GA pricing. Click Subscribe.</description>
    </item>
    
    <item>
      <title>Workshop Logistics</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/21_logistics.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/21_logistics.html</guid>
      <description>Workshop Logistics Accessing an AWS environment For the AWS Immersion Days, we will provide you the following via email:
 AWS sign in link IAM User w/ console access Password for the IAM User  If you are wanting to run through this in your own environment for training purposes, use the master CFT to deploy the base environment.
 Accessing the FortiGate CNF Console FortiGate CNF and other SaaS solutions are tied to your FortiCloud.</description>
    </item>
    
    <item>
      <title>AWS Networking Concepts</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/22_awsnetworkingconcepts.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/22_awsnetworkingconcepts.html</guid>
      <description>AWS Networking Concepts Before diving into the reference architecture for this workshop, let&amp;rsquo;s review core AWS networking concepts.
AWS Virtual Private Cloud (VPC) is a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define. You have complete control over your virtual networking environment, including selection of your own IP address range, creation of subnets, and configuration of route tables and network gateways.</description>
    </item>
    
    <item>
      <title>Distributed Egress</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/42_distributedegress.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/42_distributedegress.html</guid>
      <description>Distributed Egress For this traffic flow we will focus on the Application VPC. Distributed egress is commonly used when there is a need to inspect traffic for a VPC that has an attached IGW and resources with a public Elastic IP (EIP) or that are behind a NAT GW. The benefit of this design is that traffic does not need to traverse additional AWS networking components for inspection so each VPC is isolated from others.</description>
    </item>
    
    <item>
      <title>Task 2: Onboard an AWS account to FortiGate CNF</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/32_task2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/32_task2.html</guid>
      <description>Task 2: Onboard an AWS account to FortiGate CNF    In the FortiGate CNF Console, navigate to AWS Accounts, then click New to start the add account wizard.      In a new browser tab, log into your AWS account and click on your IAM user name in the upper right corner. This will allow you to see and copy your AWS account ID.      In the FortiGate CNF Console, provide your AWS account ID and select Launch CloudFormation Template.</description>
    </item>
    
    <item>
      <title>AWS Common Architecture Patterns</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/23_awscommonarchitecturepatterns.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/23_awscommonarchitecturepatterns.html</guid>
      <description>AWS Common Architecture Patterns While there are many ways to organize your infrastructure there are two main ways to design your networking when using GWLB, centralized and distributed. From the perspective of networking, routing, and GWLBe placement. We will discuss this further below.
FortiGate CNF is a SaaS offering that on the backend uses FortiGates, AWS GWLB, and GWLB endpoints to intercept customer traffic and inspect this transparently. As part of the deployment process for FortiGate CNF instances, the customer environment will need to implement VPC and ingress routing at the IGW to intercept the traffic to be inspected.</description>
    </item>
    
    <item>
      <title>Centralized Egress</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/43_centralizedegress.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/43_centralizedegress.html</guid>
      <description>Centralized Egress For this traffic flow we will focus on the Shared Services, Workload, and Inspection VPCs. Centralized egress is commonly used when there is a strong desire to control egress traffic through a common set of NAT GWs in an egress or what we call an Inspection VPC. The benefit of this design is that you only need NAT GWs in the Inspection VPC (one per AZ) vs every VPC (one per AZ), which have an hourly cost.</description>
    </item>
    
    <item>
      <title>Task 3: Deploying CNF Instances and GWLBe endpoints</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/33_task3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/33_task3.html</guid>
      <description>Task 3: Deploying CNF Instances and GWLBe endpoints    In the FortiGate CNF console, navigate to CNF instances and click New.      Provide a name for the CNF instance, select us-east-2 for the region for deployment, select Internal S3 for the log type, and select the S3 bucket created by CloudFormation for the logging destination. Then click Save. This will drop you back to the list of CNF instances while this is deployed in the background.</description>
    </item>
    
    <item>
      <title>Centralized East West</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/44_centralizedeastwest.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/4_modulefour/44_centralizedeastwest.html</guid>
      <description>Centralized East West For this traffic flow we will focus on the Shared Services, Workload, and Inspection VPCs. Centralized East West is commonly used when there is need for multiple VPCs in the same region to access common private resources such as a shared services VPC, premise items, or workloads/services in other VPCs. The benefit of this design is that this a flexible but simple way to interconnect many resources in the same region.</description>
    </item>
    
    <item>
      <title>FortiGate CNF Terminology</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/24_fortigatecnfterminology.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/2_moduletwo/24_fortigatecnfterminology.html</guid>
      <description>FortiGate CNF Terminology    Term Description     CNF Console The console in which you deploy CNF instances and manage policy sets   CNF Instance A deployment of CNF resources in an auto scale group in the region of your choice   Policy Set The group of FW rules, objects, and security profile groups that are assigned to one or many CNF Instance(s)   Security Profile Group A group of Layer 7 inspection profiles such as DNS filter, and known bad IP blocking    </description>
    </item>
    
    <item>
      <title>Task 4: Create a policy set and apply it to a FortiGate CNF Instance</title>
      <link>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/34_task4.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fortinetsecdevops.github.io/cnf-aws-iday/3_modulethree/34_task4.html</guid>
      <description>Task 4: Create a policy set and apply it to a FortiGate CNF Instance    At this point, we are using the default allow_all policy set which allows all communication to be allowed without any restriction from a Layer 4 and Layer 7 perspective.      To customize the actual L4 rules and L7 security profile groups applied, in the FortiGate CNF Console navigate to Policy &amp;amp; Objects &amp;gt; Policy Sets to create your own policy set.</description>
    </item>
    
  </channel>
</rss>
